AWSTemplateFormatVersion: "2010-09-09"
Description:
  VPC and Subnet Create

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCCIDR
          - PublicSubnetACIDR
          - PublicSubnetCCIDR
          - PrivateSubnetACIDR
          - PrivateSubnetCCIDR
    ParameterLabels:
      VPCCIDR:
        default: "VPC CIDR"
      PublicSubnetACIDR:
        default: "PublicSubnetA CIDR"
      PublicSubnetCCIDR:
        default: "PublicSubnetC CIDR"
      PrivateSubnetACIDR:
        default: "PrivateSubnetA CIDR"
      PrivateSubnetCCIDR:
        default: "PrivateSubnetC CIDR"

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  Namebase:
    Type: String
    Default: "lecture10"

  VPCCIDR:
    Type: String
    Default: "10.1.0.0/16"

  PublicSubnetACIDR:
    Type: String
    Default: "10.1.10.0/24"

  PublicSubnetCCIDR:
    Type: String
    Default: "10.1.20.0/24"

  PrivateSubnetACIDR:
    Type: String
    Default: "10.1.100.0/24"

  PrivateSubnetCCIDR:
    Type: String
    Default: "10.1.200.0/24"

Resources:
  # ------------------------------------------------------------#
  #  VPC
  # ------------------------------------------------------------#
  # VPC Create
  lecture10VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-vpc"

  # InternetGateway Create
  lecture10InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-igw"

  # IGW Attach
  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref lecture10InternetGateway
      VpcId: !Ref lecture10VPC

  # ------------------------------------------------------------#
  #  Subnet
  # ------------------------------------------------------------#
  # Public SubnetA Create
  lecture10PublicSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Ref PublicSubnetACIDR
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-public-subnet-a"

  # Public SubnetC Create
  lecture10PublicSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Ref PublicSubnetCCIDR
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-public-subnet-c"

  # Private SubnetA Create
  lecture10PrivateSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1a"
      CidrBlock: !Ref PrivateSubnetACIDR
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-private-subnet-a"

  # Private SubnetC Create
  lecture10PrivateSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: "ap-northeast-1c"
      CidrBlock: !Ref PrivateSubnetCCIDR
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-private-subnet-c"

  # ------------------------------------------------------------#
  #  RouteTable
  # ------------------------------------------------------------#
  # Public RouteTableA Create
  lecture10PublicRouteTableA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-public-route-a"

  # Public RouteTableC Create
  lecture10PublicRouteTableC:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-public-route-c"

  # Private RouteTableA Create
  lecture10PrivateRouteTableA:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-private-route-a"

  # Private RouteTableC Create
  lecture10PrivateRouteTableC:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref lecture10VPC
      Tags:
        - Key: Name
          Value: !Sub "${Namebase}-private-route-c"

  # ------------------------------------------------------------#
  # Routing
  # ------------------------------------------------------------#
  # PublicRouteA Create
  lecture10PublicRouteA:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref lecture10PublicRouteTableA
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref lecture10InternetGateway

  # PublicRouteC Create
  lecture10PublicRouteC:
    Type: "AWS::EC2::Route"
    Properties:
      RouteTableId: !Ref lecture10PublicRouteTableC
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref lecture10InternetGateway

  # ------------------------------------------------------------#
  # RouteTable Associate
  # ------------------------------------------------------------#
  # PublicRouteTable Associate SubnetA
  lecture10PublicSubnetARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref lecture10PublicSubnetA
      RouteTableId: !Ref lecture10PublicRouteTableA

  # PublicRouteTable Associate SubnetC
  lecture10PublicSubnetCRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref lecture10PublicSubnetC
      RouteTableId: !Ref lecture10PublicRouteTableC

  # PrivateRouteTable Associate SubnetA
  lecture10PrivateSubnetARouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref lecture10PrivateSubnetA
      RouteTableId: !Ref lecture10PrivateRouteTableA

  # PrivateRouteTable Associate SubnetC
  lecture10PrivateSubnetCRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref lecture10PrivateSubnetC
      RouteTableId: !Ref lecture10PrivateRouteTableC

# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#
Outputs:
  # VPC
  lecture10VPC:
    Value: !Ref lecture10VPC
    Export:
      Name: !Sub "${AWS::StackName}-vpcid"

  VPCCIDR:
    Value: !Ref VPCCIDR
    Export:
      Name: !Sub "${Namebase}-vpc-cidr"

  # Subnet
  PublicSubnetA:
    Value: !Ref lecture10PublicSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-a-id"

  PublicSubnetACIDR:
    Value: !Ref PublicSubnetACIDR
    Export:
      Name: !Sub "${Namebase}-public-subnet-a-cidr"

  PublicSubnetC:
    Value: !Ref lecture10PublicSubnetC
    Export:
      Name: !Sub "${AWS::StackName}-public-subnet-c-id"

  PublicSubnetCCIDR:
    Value: !Ref PublicSubnetCCIDR
    Export:
      Name: !Sub "${Namebase}-public-subnet-c-cidr"

  PrivateSubnetA:
    Value: !Ref lecture10PrivateSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-private-subnet-a-id"

  PrivateSubnetACIDR:
    Value: !Ref PrivateSubnetACIDR
    Export:
      Name: !Sub "${Namebase}-private-subnet-a-cidr"

  PrivateSubnetC:
    Value: !Ref lecture10PrivateSubnetC
    Export:
      Name: !Sub "${AWS::StackName}-private-subnet-c-id"

  PrivateSubnetCCIDR:
    Value: !Ref PrivateSubnetCCIDR
    Export:
      Name: !Sub "${Namebase}-private-subnet-c-cidr"

  # Route
  PublicRouteTableA:
    Value: !Ref lecture10PublicRouteTableA
    Export:
      Name: !Sub "${Namebase}-public-route-a-id"

  PublicRouteTableC:
    Value: !Ref lecture10PublicRouteTableC
    Export:
      Name: !Sub "${Namebase}-public-route-c-id"

  PrivateRouteTableA:
    Value: !Ref lecture10PrivateRouteTableA
    Export:
      Name: !Sub "${Namebase}-private-route-a-id"

  PrivateRouteTableC:
    Value: !Ref lecture10PrivateRouteTableC
    Export:
      Name: !Sub "${Namebase}-private-route-c-id"
