
AWSTemplateFormatVersion: 2010-09-09
Description: Securiry Group create

############################################
#         Metadata & Parameter
############################################
Metadata: #入力パラメータのグループ化と順序の指定
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Can be created as a separate resource by renaming the environment
        Parameters:
          - EnvironmentName

      -
        Label:
          default: String for cross-stacking. Same as stack name
        Parameters:
          - VpcStackName

      -
        Label:
          default: Port number for security group rules
        Parameters:
          - SgIngFromPort1
          - SgIngFromPort2
          - SgIngFromPort3
          - SgIngFromPort4
          - SgIngCiderIp1

Parameters:
  #環境名(変更することで別の環境にすることができる)
  EnvironmentName:
    Type: String
    Default: CFn-raisetech
    Description:  Write Environment Name

  #クロススタック機能用にVPC名の読み込み
  VpcStackName:
    Type: String
    Default: CFn-VPC
    Description:  Load VPC names for cross-stack

  #インバウンドルールのSSH用ポート番号
  SgIngFromPort1:
    Type: String
    Default:  22
    Description:  Port number for SSH for inbound rules

  #インバウンドルールのRDS用ポート番号
  SgIngFromPort2:
    Type: String
    Default:  3306
    Description:  Port number for RDS for inbound rules

  #インバウンドルールのWeb用ポート番号
  SgIngFromPort3:
    Type: String
    Default:  80
    Description:  Port number for HTTP for inbound rules

  #インバウンドルールのRails用ポート番号
  SgIngFromPort4:
    Type: String
    Default:  3000
    Description:  Port number for Rails application for inbound rules

  #インバウンドルールのSSH用ソース
  SgIngCiderIp1:
    Type: String
    Description:  Source for SSH for inbound rules. Select myIP

############################################
#         Security Groups
############################################
Resources:
  InstanceSecurityGroup:  #EC2用のセキュリティグループ作成
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2 SecurityGroup
      GroupName: !Sub ${EnvironmentName}-EC2-SecurityGroup  #グループネーム記載
      VpcId:  #CFn-VPC.yamlで作成したVPCでセキュリティグループを作成するようにクロススタック機能でVPCを参照
        Fn::ImportValue: #ImportValueでエクスポートしたVPCを参照（ImportValueは!Subを併用する場合、短縮形は使用できない）
          !Sub ${VpcStackName}-VPC

      SecurityGroupIngress: #インバウンドルールを記述
        - CidrIp: !Ref SgIngCiderIp1  #リソース(IPアドレス)の決定。今回はSSHのためMyIPを宣言した変数を呼び出し
          IpProtocol: TCP #プロトコルの決定
          FromPort: !Ref SgIngFromPort1 #FromとToでポート範囲の決定。今回はSSHのため22ポートを宣言した変数を呼び出し
          ToPort: !Ref SgIngFromPort1
        - SourceSecurityGroupId: !Ref ALBSecurityGroup  #ALBセキュリティグループからのみ通信を許可
          IpProtocol: TCP #プロトコルの決定
          FromPort: !Ref SgIngFromPort4 #FromとToでポート範囲の決定。今回はRailsアプリのデフォルトポートを宣言した変数を呼び出し
          ToPort: !Ref SgIngFromPort4

      SecurityGroupEgress:  #アウトバウンドルールを記述
        - IpProtocol: -1  #-1と記述することですべてのプロトコルを含む
          CidrIp: 0.0.0.0/0 #インターネット向けのためのIPアドレスを指定
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName}-EC2-Sg

  RDSSecurityGroup:  #RDS用のセキュリティグループ作成
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS SecurityGroup
      GroupName: !Sub ${EnvironmentName}-RDS-SecurityGroup  #グループネーム記載
      VpcId:  #CFn-VPC.yamlで作成したVPCでセキュリティグループを作成するようにクロススタック機能でVPCを参照
        Fn::ImportValue: #ImportValueでエクスポートしたVPCを参照（ImportValueは!Subを併用する場合、短縮形は使用できない）
          !Sub ${VpcStackName}-VPC

      SecurityGroupIngress: #インバウンドルールを記述
        - SourceSecurityGroupId: !Ref InstanceSecurityGroup  #EC2セキュリティグループからのみ通信を許可
          IpProtocol: TCP #プロトコルの決定
          FromPort: !Ref SgIngFromPort2 #FromとToでポート範囲の決定。今回はMySQLのため3306ポートを宣言した変数を呼び出し
          ToPort: !Ref SgIngFromPort2

      SecurityGroupEgress:  #アウトバウンドルールを記述
        - IpProtocol: -1  #-1と記述することですべてのプロトコルを含む
          CidrIp: 0.0.0.0/0 #インターネット向けのためのIPアドレスを指定
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName}-RDS-Sg

  ALBSecurityGroup:  #ALB用のセキュリティグループ作成
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ALB SecurityGroup
      GroupName: !Sub ${EnvironmentName}-ALB-SecurityGroup  #グループネーム記載
      VpcId:  #CFn-VPC.yamlで作成したVPCでセキュリティグループを作成するようにクロススタック機能でVPCを参照
        Fn::ImportValue: #ImportValueでエクスポートしたVPCを参照（ImportValueは!Subを併用する場合、短縮形は使用できない）
          !Sub ${VpcStackName}-VPC

      SecurityGroupIngress: #インバウンドルールを記述
        - CidrIp: !Ref SgIngCiderIp1  #リソース(IPアドレス)の決定。今回はHTTPのためMyIPを宣言した変数を呼び出し
          IpProtocol: TCP #プロトコルの決定
          FromPort: !Ref SgIngFromPort3 #FromとToでポート範囲の決定。今回はHTTPのため80ポートを宣言した変数を呼び出し
          ToPort: !Ref SgIngFromPort3
        - CidrIp: !Ref SgIngCiderIp1  #リソース(IPアドレス)の決定。今回はRailsのためMyIPを宣言した変数を呼び出し
          IpProtocol: TCP #プロトコルの決定
          FromPort: !Ref SgIngFromPort4 #FromとToでポート範囲の決定。今回はRailsアプリのデフォルトポートを宣言した変数を呼び出し
          ToPort: !Ref SgIngFromPort4

      SecurityGroupEgress:  #アウトバウンドルールを記述
        - IpProtocol: -1  #-1と記述することですべてのプロトコルを含む
          CidrIp: 0.0.0.0/0 #インターネット向けのためのIPアドレスを指定
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName}-ALB-Sg

  ############################################
  #         Subnet Group
  ############################################
  DBSubnetGroup:  #RDSが利用するサブネットの組み合わせを定義
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupName:  !Sub ${EnvironmentName}-SunbetGroup
      DBSubnetGroupDescription: DBSubnetGroupName #Descriptionを記述していないとエラーを吐く
      SubnetIds:  #Subnetを選択
        -  Fn::ImportValue: #ImportValueでエクスポートしたVPCを参照（ImportValueは!Subを併用する場合、短縮形は使用できない）
             !Sub ${VpcStackName}-PrivateSubnet1
        -  Fn::ImportValue: #ImportValueでエクスポートしたVPCを参照（ImportValueは!Subを併用する場合、短縮形は使用できない）
             !Sub ${VpcStackName}-PrivateSubnet2


############################################
#         Outputs
############################################
Outputs:  #クロススタック用のエクスポートを宣言
  StackEC2Sg: #EC2用セキュリティグループのエクスポート
    Description: Stack EC2 Sg  is ID
    Value: !Ref InstanceSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-EC2Sg  #エクスポート名を記述。名前の重複を避けるため、StackNameでスタックファイル名が付くように記述。

  StackRDSSg: #RDS用セキュリティグループのエクスポート
    Description: Stack RDS Sg  is ID
    Value: !Ref RDSSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-RDSSg  #エクスポート名を記述。名前の重複を避けるため、StackNameでスタックファイル名が付くように記述。

  StackALBSg: #ALB用セキュリティグループのエクスポート
    Description: Stack ALB Sg  is ID
    Value: !Ref ALBSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-ALBSg  #エクスポート名を記述。名前の重複を避けるため、StackNameでスタックファイル名が付くように記述。

  StackDBSubnetGroupName: #サブネットグループのエクスポート
    Description: Stack DBSubnetGroup Name  is ID
    Value: !Ref DBSubnetGroup
    Export:
      Name: !Sub ${AWS::StackName}-SubnetGroupName  #エクスポート名を記述。名前の重複を避けるため、StackNameでスタックファイル名が付くように記述。

  StackPort1: #HTTPのPort番号のエクスポート
    Description: Stack HTTP Port
    Value: !Ref SgIngFromPort3
    Export:
      Name: !Sub ${AWS::StackName}-WebPort

  StackPort2: #RailsのPort番号のエクスポート
    Description: Stack Rails Port
    Value: !Ref SgIngFromPort4
    Export:
      Name: !Sub ${AWS::StackName}-RailsPort
